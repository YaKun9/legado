name: 构建并发布到Release
on:
  push:
    branches:
      - master
    paths:
      - '**'
      - '!**/assets/**'
      - '!**.md'
      - '!**/ISSUE_TEMPLATE/**'
      - '!**/modules/web/**'
  pull_request:
    paths-ignore:
      - '**/modules/web/**'
  workflow_dispatch:

jobs:

  prepare:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'Merge pull request') }}
    outputs:
      version: ${{ steps.set-ver.outputs.version }}
      versionL: ${{ steps.set-ver.outputs.versionL }}
      lanzou: ${{ steps.check.outputs.lanzou }}
      telegram: ${{ steps.check.outputs.telegram }}
    steps:
      - id: set-ver
        run: |
          echo "version=$(date -d "8 hour" -u +3.%y.%m%d%H)" >> $GITHUB_OUTPUT
          echo "versionL=$(date -d "8 hour" -u +3.%y.%m%d%H%M)" >> $GITHUB_OUTPUT
      - id: check
        run: |
          if [ ${{ secrets.LANZOU_ID }} ]; then
            echo "lanzou=yes" >> $GITHUB_OUTPUT
          fi
          if [ ${{ secrets.BOT_TOKEN }} ]; then
            echo "telegram=yes" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    strategy:
      matrix:
        product: [ app ]
        type: [ release, releaseA ]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      product: ${{ matrix.product }}
      type: ${{ matrix.type }}
      VERSION: ${{ needs.prepare.outputs.version }}
      VERSIONL: ${{ needs.prepare.outputs.versionL }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Clear 18PlusList.txt
        run: |
          echo "清空18PlusList.txt"
          echo "">$GITHUB_WORKSPACE/app/src/main/assets/18PlusList.txt
      - name: Release Apk Sign
        run: |
          echo "给apk增加签名"
          cp $GITHUB_WORKSPACE/.github/workflows/legado.jks $GITHUB_WORKSPACE/app/legado.jks
          sed '$a\RELEASE_STORE_FILE=./legado.jks'          $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_KEY_ALIAS=legado'                 $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_STORE_PASSWORD=gedoor_legado'     $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_KEY_PASSWORD=gedoor_legado'       $GITHUB_WORKSPACE/gradle.properties -i

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build With Gradle
        continue-on-error: true
        run: |
          if [ ${{ env.type }} == 'release' ]; then
            typeName="原包名"
          else
            typeName="共存"
            sed "s/'.release'/'.releaseA'/" $GITHUB_WORKSPACE/app/build.gradle  -i
            sed 's/.release/.releaseA/'     $GITHUB_WORKSPACE/app/google-services.json -i
          fi
          echo "统一版本号"
          sed "/def version/c def version = \"${{ env.VERSION }}\"" $GITHUB_WORKSPACE/app/build.gradle  -i
          echo "开始${{ env.product }}$typeName构建"
          chmod +x gradlew
          ./gradlew assemble${{ env.product }}release --build-cache --parallel --daemon --warning-mode all
          echo "修改APK文件名"
          mkdir -p ${{ github.workspace }}/apk/
          for file in `ls ${{ github.workspace }}/app/build/outputs/apk/*/*/*.apk`; do
            mv "$file" ${{ github.workspace }}/apk/legado_${{ env.product }}_${{ env.VERSIONL }}_$typeName.apk
          done
          echo "移动mapping文件"
          mkdir -p ${{ github.workspace }}/mapping/
          for file in `ls ${{ github.workspace }}/app/build/outputs/mapping/*/mapping.txt`; do
            mv "$file" ${{ github.workspace }}/mapping/mapping.txt
          done

      - name: Move Missing Rules Files
        run: |
          echo "移动missing_rules.txt文件"
          mkdir -p ${{ github.workspace }}/mapping/
          for file in `ls ${{ github.workspace }}/app/build/outputs/mapping/*/missing_rules.txt`; do
            mv "$file" ${{ github.workspace }}/mapping/missing_rules.txt
          done

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.prepare.outputs.versionL }}
          release_name: Release ${{ needs.prepare.outputs.versionL }}
          body: |
            Release ${{ needs.prepare.outputs.versionL }}
          draft: false
          prerelease: false

      - name: Upload APK To Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/apk/*.apk
          asset_name: legado.${{ env.product }}.${{ env.type }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Mapping File To Release
        id: upload-release-mapping
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/mapping/mapping.txt
          asset_name: legado.${{ env.product }}.${{ env.type }}.mapping.txt
          asset_content_type: text/plain
